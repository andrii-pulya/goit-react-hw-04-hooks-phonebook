{"version":3,"sources":["components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactList/ContactList.jsx","components/PageWrapper/PageWrapper.styled.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","App.js","index.js"],"names":["AddContactContainer","FormContainer","ItemFormLabel","ContactBtn","AddContactBtn","text","AddContactForm","state","name","number","submitContacts","e","preventDefault","props","onSubmit","setState","handlechange","target","value","this","type","pattern","title","placeholder","autoComplete","onChange","required","Component","propTypes","PropTypes","func","isRequired","ContactListContainer","Headline","ContactItemContainer","ContactItem","DeleteBtn","ItemName","ContactList","contacts","onDeleteContact","length","map","contact","onClick","id","PageWrapper","ContactFilterContainer","ContactFilterName","ContactFilterInput","ContactFilter","filter","App","addContact","find","alert","prevState","nanoid","deleteContact","handleChange","localStorage","getItem","parsedContacts","JSON","parse","_","setItem","stringify","normalizedFilter","toLowerCase","rendedContact","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e432d3.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddContactContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  width: max-content;\r\n  align-items: center;\r\n`\r\nexport const FormContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const ItemFormLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ContactBtn = styled.button`\r\n  display: block;\r\n  padding: 5px;\r\n  margin: 10px 0px;\r\n  width: max-content;\r\n  coursor: pointer;\r\n  margin: 20px auto;\r\n`\r\n\r\nexport function AddContactBtn({ text }) {\r\n  return <ContactBtn>{text}</ContactBtn>\r\n}\r\n\r\nAddContactBtn.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  AddContactContainer,\r\n  AddContactBtn,\r\n  FormContainer,\r\n  ItemFormLabel,\r\n} from './AddContactForm.styled'\r\n\r\nexport default class AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  submitContacts = (e) => {\r\n    e.preventDefault()\r\n    const { name, number } = this.state\r\n    this.props.onSubmit(name, number)\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n  handlechange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n    return (\r\n      <>\r\n        <AddContactContainer>\r\n          <h1>Phonebook</h1>\r\n          <FormContainer onSubmit={this.submitContacts}>\r\n            <ItemFormLabel>\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                placeholder=\"Put the name here\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                onChange={this.handlechange}\r\n                required\r\n              />\r\n            </ItemFormLabel>\r\n            <ItemFormLabel>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                placeholder=\"Put the number here\"\r\n                autoComplete=\"off\"\r\n                value={number}\r\n                onChange={this.handlechange}\r\n                required\r\n              />\r\n            </ItemFormLabel>\r\n            <AddContactBtn type=\"submit\" text={'Add contact'} />\r\n          </FormContainer>\r\n        </AddContactContainer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nFormContainer.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactListContainer = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\nexport const Headline = styled.h2`\r\n  text-align: center;\r\n`\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactItemContainer = styled.div`\r\n  display: flex;\r\n`\r\nexport const ContactItem = styled.li``\r\n\r\nexport const DeleteBtn = styled.button`\r\n  width: max-content;\r\n  padding: 3px 5px;\r\n`\r\nexport const ItemName = styled.p`\r\n  display: block;\r\n  width: 250px;\r\n  margin: 0;\r\n`\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { ContactListContainer, Headline } from './ContactList.styled'\r\nimport {\r\n  ContactItemContainer,\r\n  ContactItem,\r\n  ItemName,\r\n  DeleteBtn,\r\n} from '../ContactItem/ContactItem.styled'\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <ContactListContainer>\r\n        {contacts.length === 0 ? (\r\n          <Headline>Can not find the Contact</Headline>\r\n        ) : (\r\n          <Headline>Contacts</Headline>\r\n        )}\r\n\r\n        {contacts.map((contact) => (\r\n          <ContactItem key={contact.id}>\r\n            <ContactItemContainer>\r\n              <ItemName>\r\n                {contact.name}\r\n                {': '}\r\n                {contact.number}\r\n              </ItemName>\r\n              <DeleteBtn\r\n                onClick={() => onDeleteContact(contact.id)}\r\n                type=\"button\"\r\n              >\r\n                Delete\r\n              </DeleteBtn>\r\n            </ContactItemContainer>\r\n          </ContactItem>\r\n        ))}\r\n      </ContactListContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n`\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactFilterContainer = styled.label``\r\n\r\nexport const ContactFilterName = styled.p`\r\n  font-weight: 500;\r\n  font-style: italic;\r\n`\r\n\r\nexport const ContactFilterInput = styled.input``\r\n","import PropTypes from 'prop-types'\r\n\r\nimport {\r\n  ContactFilterContainer,\r\n  ContactFilterInput,\r\n  ContactFilterName,\r\n} from './ContactFilter.styled'\r\n\r\nexport default function ContactFilter({ filter, onChange }) {\r\n  return (\r\n    <ContactFilterContainer>\r\n      <ContactFilterName>Find contact by name</ContactFilterName>\r\n      <ContactFilterInput\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        autoComplete=\"off\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </ContactFilterContainer>\r\n  )\r\n}\r\n\r\nContactFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import './App.css'\n\nimport React, { Component } from 'react'\nimport { nanoid } from 'nanoid'\n\nimport AddContactForm from './components/AddContactForm/AddContactForm.jsx'\nimport ContactList from './components/ContactList/ContactList.jsx'\nimport { PageWrapper } from './components/PageWrapper/PageWrapper.styled.jsx'\nimport ContactFilter from './components/ContactFilter/ContactFilter.jsx'\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`)\n      return false\n    }\n    this.setState((prevState) => ({\n      contacts: [\n        {\n          id: nanoid(),\n          name: name,\n          number: number,\n        },\n        ...prevState.contacts,\n      ],\n    }))\n  }\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }))\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  render() {\n    const { contacts, filter } = this.state\n    const normalizedFilter = filter.toLowerCase()\n    const rendedContact = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n\n    return (\n      <PageWrapper>\n        <AddContactForm onSubmit={this.addContact} />\n        <ContactFilter filter={filter} onChange={this.handleChange} />\n        {filter.length === 0 ? (\n          contacts.length === 0 ? (\n            <h1>You have not contacts saved</h1>\n          ) : (\n            <ContactList\n              contacts={contacts}\n              onDeleteContact={this.deleteContact}\n            />\n          )\n        ) : (\n          <ContactList\n            contacts={rendedContact}\n            onDeleteContact={this.deleteContact}\n          />\n        )}\n      </PageWrapper>\n    )\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}